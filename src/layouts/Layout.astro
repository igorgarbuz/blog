---
import "@styles/fonts.css"
import "@styles/themes.css"
import "@styles/global.css"
import { SITE, LOCALE } from "@config"
import type { Post } from "@types"
import { ViewTransitions } from "astro:transitions"

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION

interface Props extends Partial<Post> {
    scrollSmooth?: boolean
}

const {
    author = SITE.title,
    canonicalUrl = new URL(Astro.url.pathname, Astro.site).href,
    dateModified,
    datePublished,
    description = SITE.description,
    ogImage = SITE.ogImage,
    scrollSmooth = true,
    title = SITE.title,
} = Astro.props

const socialImageURL = new URL(
    // it is string type, but due to zod image validation schema need to work around the inferred type
    typeof ogImage === "string" ? ogImage : SITE.ogImage,
    Astro.url.origin
).href
---

<!doctype html>
<html lang=`${LOCALE.lang ?? "en"}` class={`${scrollSmooth && "scroll-smooth"}`}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="canonical" href={canonicalUrl} />
        <meta name="generator" content={Astro.generator} />
        {/* General Meta Tags */}
        <title>{title}</title>
        <meta name="title" content={title} />
        <meta name="description" content={description} />
        <meta name="author" content={author} />
        <link rel="sitemap" href="/sitemap-index.xml" />

        {/* Open Graph / Facebook */}
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:url" content={canonicalUrl} />
        <meta property="og:image" content={socialImageURL} />

        {/* Article Published/Modified time */}
        {
            datePublished && (
                <meta property="article:published_time" content={datePublished.toISOString()} />
            )
        }
        {
            dateModified && (
                <meta property="article:modified_time" content={dateModified.toISOString()} />
            )
        }

        {/* Twitter */}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={canonicalUrl} />
        <meta property="twitter:title" content={title} />
        <meta property="twitter:description" content={description} />
        <meta property="twitter:image" content={socialImageURL} />

        {/* Google Font */}
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,400;0,500;0,600;0,700;1,400;1,600&display=swap"
            rel="stylesheet"
        />

        {
            // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
            // include google-site-verification tag in the heading
            // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
            googleSiteVerification && (
                <meta name="google-site-verification" content={googleSiteVerification} />
            )
        }

        <ViewTransitions />
    </head>
    <body>
        <slot />
    </body>
</html>
