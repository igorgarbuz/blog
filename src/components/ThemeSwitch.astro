---
const props = Astro.props
// From Astro tutorials:
// https://docs.astro.build/en/tutorial/6-islands/2/
// https://docs.astro.build/en/tutorials/add-view-transitions/#update-scripts
---

<button id="theme-toggle" {...props}>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path
            class="sun"
            fill-rule="evenodd"
            d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
        ></path>
        <path
            class="moon"
            fill-rule="evenodd"
            d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
        ></path>
    </svg>
</button>

<style>
    #theme-toggle {
        border: 0;
        background: none;
        cursor: pointer;
    }

    svg {
        margin-top: 6px; /* Center the icon vertically */
        width: 30px; /* Fine-tune the size relative to other header objects */
    }

    .sun {
        fill: var(--color-txt);
    }

    .moon {
        /* fill: var(--color-txt); */
        fill: transparent;
    }

    :global(.light) .sun {
        /* fill: black; */
        fill: transparent;
    }

    :global(.light) .moon {
        fill: var(--color-txt);
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const handleToggleClick = () => {
            // Disable color transitions during theme switch
            document.body.classList.add("disable-transition")
            const element = document.documentElement
            element.classList.toggle("light")

            // Re-enable color transitions after the theme switch
            setTimeout(() => {
                document.body.classList.remove("disable-transition")
            }, 100) // A short delay is usually enough

            const isLight = element.classList.contains("light")
            localStorage.setItem("theme", isLight ? "light" : "dark")
            setThemeColorMetaTag()
        }

        document.getElementById("theme-toggle")?.addEventListener("click", handleToggleClick)

        const setThemeColorMetaTag = () => {
            const backgroundColor = getComputedStyle(document.body).backgroundColor
            let themeColorMetaTag = document.querySelector("meta[name='theme-color']")
            // theme-color meta tag should be present in the BaseHead component
            if (themeColorMetaTag) {
                themeColorMetaTag.setAttribute("content", backgroundColor)
            }
        }
        setThemeColorMetaTag()
    })
</script>

<script>
    /**
     * Check for theme earlier to prevent flashing in the dark mode when using View Transitions
     * as described in: https://docs.astro.build/en/tutorials/add-view-transitions/#update-scripts
     */
    document.addEventListener("astro:after-swap", () => {
        localStorage.theme === "light"
            ? document.documentElement.classList.add("light")
            : document.documentElement.classList.remove("light")
    })
</script>
